"Valida los tipos de nivel"
enum Level {
    principiante 
    intermedio 
    avanzado
}

union GlobalSearch = Course | Student | Monitor

type Course {
    _id: ID!
    title: String!
    teacher: String
    description: String!
    topic: String @deprecated
    people: [Student]
    level: Level
}

interface Person {
    _id: ID!
    name: String!
    email: String!
}

type Student implements Person {
    _id: ID!
    name: String!
    email: String!
    avatar: String
}

type Monitor implements Person {
    _id: ID!
    name: String!
    email: String!
    phone: String
}

type Query {
    "Devuelve todos los cursos"
    Courses: [Course!]
    "Devuelve un curso"
    Course(_id: ID!): Course

    People: [Person!]
    "Devuelve un curso"
    Person(_id: ID!): Person

    "Ejecuta una busqueda global "
    searchItems(keyword: String! ): [GlobalSearch]
}

input CourseInput {
    title: String!
    teacher: String
    description: String!
    topic: String
    level: Level
}

input PersonInput {
    name: String!
    email: String!
    phone: String
    avatar: String
}

input CourseEditInput {
    title: String
    teacher: String
    description: String
    topic: String
}

input PersonEditInput {
    name: String
    email: String
    phone: String
    avatar: String
}

type Mutation {
    createCourse(input: CourseInput!): Course

    updateCourse(_id: ID!, input: CourseEditInput!): Course
   
    deleteCourse(_id: ID!): Course

    createPerson(input: PersonInput!): Person

    updatePerson(_id: ID!, input: PersonEditInput!): Person

    deleteStudent(_id: ID!): Student

    "Add Student to a course"
    People(courseID: ID!, personID: ID!): Course
}